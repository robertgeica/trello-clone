{"version":3,"sources":["components/Card/AddCard.js","components/TaskModal/List/List.js","components/TaskModal/List/AddList.js","components/TaskModal/Checklist/Checklist.js","components/TaskModal/Checklist/AddChecklist.js","components/TaskModal/ModalHeader.js","components/TaskModal/TaskModal.js","components/Task/Task.js","components/Task/AddTask.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["AddCard","addCard","useState","value","setValue","className","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","List","index","item","markDone","console","log","isDone","onClick","todo","AddList","addList","setItem","Checklist","list","setList","newList","completed","filter","title","length","map","key","AddChecklist","addChecklist","checklist","setChecklist","stopPropagation","ModalHeader","handleCloseModal","removeTask","icon","Dropdown","floating","Menu","TaskModal","selectedTask","checklists","isOpen","contentLabel","onRequestClose","ariaHideApp","newChecklist","Task","task","openTaskModal","undefined","AddTask","addTask","Card","card","tasks","setTask","newTask","splice","App","cards","setCard","newCard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d5a4842.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './AddCard.css';\n\nconst AddCard = ({addCard}) => {\n\n    const [value, setValue] = useState('');\n\n    const handleSubmitCard = (e) => {\n        e.preventDefault();\n        \n        if(!value) return;\n        if(value.trim() == '') return;\n        addCard(value);\n        setValue('');\n    }\n\n\n    return (\n        <div className=\"empty-card card\">\n\n            <form className=\"addCard-form\" onSubmit={handleSubmitCard}>\n                <input\n                    type=\"text\"\n                    className=\"addCard-input\"\n                    placeholder=\"Add new task\"\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    \n                />\n            </form>\n\n        </div>\n    )\n}\n\nexport default AddCard;","import React from 'react';\nimport './List.css';\nconst List = ({index, item, markDone}) => {\n\n    console.log(item);\n    return (\n        <div className=\"list\">\n            <i className={item.isDone ? 'far fa-check-square' : 'far fa-square'}\n                onClick={() => {\n                    markDone(index, item.todo, item.isDone);\n                }}\n                \n            ></i>\n            \n            <p className=\"list-element\">{item.todo}</p>\n        </div>\n    )\n}\n\nexport default List;","import React, {useState} from 'react';\nimport './AddList.css';\n\nconst AddList = ({addList}) => {\n\n    const [item, setItem] = useState('');\n\n    const handleSubmitItem = (e) => {\n        e.preventDefault();\n        \n        if(!item) return;\n        addList(item);\n        setItem('');\n    }\n\n    return (\n        <div className=\"addlist\">\n\n            <form className=\"addlist-form\" onSubmit={handleSubmitItem}>\n                <input\n                    type=\"text\"\n                    className=\"addlist-input\"\n                    placeholder='+ add item'\n                    value={item}\n                    onChange={e => setItem(e.target.value)}\n                    \n                />\n            </form>\n\n        </div>\n    )\n}\n\nexport default AddList;","import React, { useState } from 'react';\nimport './Checklist.css';\nimport List from '../List/List';\nimport AddList from '../List/AddList';\n\nconst Checklist = ({item}) => {\n\n    const [list, setList] = useState([]);\n\n    const addList = (todo, isDone) => {\n\t\tconst newList = [...list, {todo, isDone: false}];\n\t\tsetList(newList);\n\t\tconsole.log('add todo: ' + todo);\n    }\n\n    const markDone = (index, todo, isDone) => {\n        const newList = [...list];\n        newList[index] = {todo: todo, isDone: !isDone};\n        setList(newList);\n        console.log('marked as done: ' + index);\n    }\n\n    const completed = list.filter(item => {\n        return item.isDone;\n    })\n\n    \n    console.log(list);\n    return (\n        <div className=\"checklist-container\">\n\n            <div className=\"checklist-stats\">    \n                <p className=\"checklist-title\">\n                    {item.title}\n                </p>\n\n                <p className=\"done-undone\">\n                    {completed.length}/{list.length}\n                </p>    \n            </div>\n\n            {\n                list.map((item, index) => (\n\t\t\t\t\t<List \n\t\t\t\t\t\tkey={index} \n                        index={index}\n\t\t\t\t\t\titem={item}\n                        markDone={markDone}\n\t\t\t\t\t/>))\n\n            }\n\n            <AddList addList={addList} />\n        </div>\n    )\n}\n\nexport default Checklist;","import React, {useState} from 'react';\nimport './AddChecklist.css';\n\nconst AddChecklist = ({addChecklist}) => {\n\n    const [checklist, setChecklist] = useState('');\n\n    const handleSubmitChecklist = (e) => {\n        e.preventDefault();\n        \n        if(!checklist) return;\n        addChecklist(checklist);\n        setChecklist('');\n    }\n\n    return (\n        <div className=\"checklist\">\n            <h3>Add Checklist</h3>\n\n            <form \n                onSubmit={handleSubmitChecklist}\n                className=\"checklist-form\"\n            >\n                <input\n                    type=\"text\"\n                    className=\"checklist-input\"\n                    placeholder='title'\n                    value={checklist}\n                    onClick={e => {e.stopPropagation()}}\n                    onChange={e => setChecklist(e.target.value)}\n                />\n\n                <button className=\"addChecklistBtn\">Add task</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default AddChecklist;","import React from 'react';\nimport AddChecklist from './Checklist/AddChecklist'\nimport {Dropdown, Input} from 'semantic-ui-react';\nimport './ModalHeader.css';\nconst ModalHeader = ({handleCloseModal, addChecklist, removeTask, index}) => (\n    <div className=\"modalHeader\">\n\n        <button \n            className=\"close-modal  icon\"\n            icon='close'\n            onClick={handleCloseModal}\n        > \n            <i className=\"fas fa-times\"></i>\n        </button>\n\n        <button \n            className=\"remove-modal  icon\"\n            onClick={() => {\n                handleCloseModal();\n                removeTask(index);        \n            }}\n        > \n             <i className=\"far fa-trash-alt\"></i>\n        </button>\n\n        <Dropdown\n            icon='list'\n            floating\n            className='icon'\n        >\n            \n            <Dropdown.Menu>\n                <AddChecklist addChecklist={addChecklist} />  \n\n            </Dropdown.Menu>\n        </Dropdown>\n\n    </div>\n)\n\nexport default ModalHeader;","import React, {useState} from 'react';\nimport Modal from 'react-modal';\nimport './TaskModal.css';\nimport Checklist from './Checklist/Checklist';\nimport AddChecklist from './Checklist/AddChecklist';\nimport ModalHeader from './ModalHeader';\n\n\nconst TaskModal = ({index, removeTask, title, selectedTask, handleCloseModal}) => {\n\n    const [checklists, setChecklist] = useState([{title: 'test'}]);\n    \n    const addChecklist = (title) => {\n\t\tconst newChecklist = [...checklists, {title}];\n\t\tsetChecklist(newChecklist);\n\t\tconsole.log('add checklist: ' + title);\n\t}\n\n\n    return (\n        <Modal\n            isOpen={!!selectedTask}\n            // isOpen={true}\n            contentLabel=\"Task Modal\"\n            onRequestClose={handleCloseModal}\n            ariaHideApp={false}\n            className=\"modal\"\n\n        >\n            <ModalHeader \n                handleCloseModal={handleCloseModal}\n                addChecklist={addChecklist}\n                removeTask={removeTask}\n                index={index}\n            />\n\n            <div>\n                <h1 className=\"modal-title\">{title}</h1>\n\n                {\n                    checklists.map((item, index) => (\n                    <Checklist \n                        key={index} \n                        item={item}\n                        \n                    />))\n                }\n    \n            </div>\n\n        </Modal>\n    )\n\n}\n\nexport default TaskModal;","import React, {useState} from 'react';\nimport TaskModal from '../TaskModal/TaskModal';\nimport './Task.css';\n\n\nconst Task = ({index, removeTask, task}) => {\n\n    const [selectedTask, openTaskModal] = useState(false);\n\n    const handleOpenModal = e => {\n        openTaskModal(e.target);\n        console.log('opened: ' + e.target);\n    }\n\n    const handleCloseModal = e => {\n        openTaskModal(undefined);\n        console.log('handled close');\n    }\n\n    return (\n        <div>\n\n            <TaskModal \n                title={task.title}\n                selectedTask={selectedTask}\n                handleCloseModal={handleCloseModal}\n                index={index}\n                removeTask={removeTask}\n            />\n            \n            <div className=\"task\">\n                <p \n                    onClick={handleOpenModal} \n                    className=\"task-title\"\n                >\n                    {task.title ? task.title : ''}\n                </p>\n            </div>\n\n        </div>\n    );\n\n\n}\n\n\nexport default Task;","import React, {useState} from 'react';\nimport './AddTask.css';\n\n\nconst AddTask = ({addTask, placeholder}) => {\n\n    const [value, setValue] = useState('');\n    const handleSubmitTask = (e) => {\n        e.preventDefault();\n        \n        addTask(value);\n        setValue('');\n\n    }\n\n    return (\n        <form className=\"input-form\" onSubmit={handleSubmitTask}>\n            <input\n                className=\"task-input\"\n                type=\"text\"\n                placeholder=\"Add new task\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n            />\n        </form>\n    )\n}\n\nexport default AddTask;","import React, {useState} from 'react';\nimport Task from '../Task/Task';\nimport AddTask from '../Task/AddTask'; \nimport './Card.css';\n\n\nconst Card = ({card}) => {\n\n    const [tasks, setTask] = useState([{title: 'Website Redesign'}]);\n\n    const addTask = (title) => {\n\t\tconst newTask = [...tasks, {title}];\n        if(title.trim() !== '') {\n\t\t    setTask(newTask);\n        }\n\t\tconsole.log('add task: ' + title);\n\t}\n\n    const removeTask = (index) => {\n        const newTask = [...tasks];\n        newTask.splice(index, 1);\n        setTask(newTask);\n    }\n\n    return(\n        <div className=\"card non-empty-card\">\n            <div className=\"card-content\">\n                <h1 className=\"card-title\">{card.title}</h1>\n\n                <div className=\"tasks\">\n                    {\n                        tasks.map((task, index) => (\n                        <Task \n                            key={index} \n                            index={index} \n                            task={task} \n                            removeTask={removeTask} \n                        />))\n                    }\n                    \n                </div>\n                <AddTask addTask={addTask} />\n        \n            </div>\n        </div>\n        \n    );\n        \n}\n\n\nexport default Card;","import React, {useState} from 'react';\nimport './App.css';\nimport AddCard from './components/Card/AddCard';\nimport Card from './components/Card/Card';\n\nfunction App() {\n\n\tconst [cards, setCard] = useState([\n\t\t{\n\t\t\ttitle: 'Todo'\n\t\t}\n\t]);\n\n\n\tconst addCard = (title) => {\n\t\tconst newCard = [...cards, {title}];\n\t\tsetCard(newCard);\n\t\tconsole.log('add card:' + title);\n\t}\n\n  \treturn (\n    \t<div className=\"App\">\n\n\t\t\t<div className=\"board\">\n\t\t\t\t{\n\t\t\t\t\tcards.map((card, index) => (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\tcard={card}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\n\t\t\t\t<AddCard \n\t\t\t\t\taddCard={addCard} \n\t\t\t\t\tplaceholder=\"Add new card\" \n\t\t\t\t/>\n\n\t\t\t</div>\n\n    \t</div>\n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}